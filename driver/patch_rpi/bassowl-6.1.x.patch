diff --git a/arch/arm/boot/dts/overlays/Makefile b/arch/arm/boot/dts/overlays/Makefile
index 57e2577c9..2856112cb 100644
--- a/arch/arm/boot/dts/overlays/Makefile
+++ b/arch/arm/boot/dts/overlays/Makefile
@@ -34,6 +34,7 @@ dtbo-$(CONFIG_ARCH_BCM2835) += \
 	audiosense-pi.dtbo \
 	audremap.dtbo \
 	balena-fin.dtbo \
+	bassowl.dtbo \
 	camera-mux-2port.dtbo \
 	camera-mux-4port.dtbo \
 	cap1106.dtbo \
diff --git a/arch/arm/boot/dts/overlays/bassowl-overlay.dts b/arch/arm/boot/dts/overlays/bassowl-overlay.dts
new file mode 100755
index 000000000..74049b973
--- /dev/null
+++ b/arch/arm/boot/dts/overlays/bassowl-overlay.dts
@@ -0,0 +1,53 @@
+// Definitions for BassOwl-HAT
+/dts-v1/;
+/plugin/;
+
+/ {
+    compatible = "brcm,bcm2835";
+
+    fragment@0 {
+        target = <&i2s>;
+        __overlay__ {
+            status = "okay";
+        };
+    };
+
+    fragment@1 {
+        target = <&i2c1>;
+        __overlay__ {
+            status = "okay";
+            clock-frequency = <400000>;
+            #address-cells = <1>;
+            #size-cells = <0>;
+
+            codec: tas5825m@4c {
+                #sound-dai-cells = <0>;
+                compatible = "ti,tas5825m";
+                reg = <0x4c>;
+            };
+        };
+    };
+
+    fragment@2 {
+        target = <&sound>;
+        __overlay__ {
+            status = "okay";
+            compatible = "simple-audio-card";
+            label = "bassowl";
+            simple-audio-card,dai-link {
+                /* DAC */
+                format = "i2s";
+                bitclock-master = <&dailink_master>;
+                frame-master = <&dailink_master>;
+                dailink_master: cpu {
+                        sound-dai = <&i2s>;
+                        dai-tdm-slot-num = <2>;
+                        dai-tdm-slot-width = <32>;
+                };
+            codec {
+                    sound-dai = <&codec>;
+            };
+        };
+    };
+  };
+};
diff --git a/arch/arm/configs/bcm2709_defconfig b/arch/arm/configs/bcm2709_defconfig
index f34a38fff..5eef53b26 100644
--- a/arch/arm/configs/bcm2709_defconfig
+++ b/arch/arm/configs/bcm2709_defconfig
@@ -1058,6 +1058,7 @@ CONFIG_SND_SOC_ICS43432=m
 CONFIG_SND_SOC_MA120X0P=m
 CONFIG_SND_SOC_MAX98357A=m
 CONFIG_SND_SOC_SPDIF=m
+CONFIG_SND_SOC_TAS5825M=m
 CONFIG_SND_SOC_TLV320AIC23_I2C=m
 CONFIG_SND_SOC_WM8804_I2C=m
 CONFIG_SND_SOC_WM8960=m
diff --git a/arch/arm/configs/bcm2711_defconfig b/arch/arm/configs/bcm2711_defconfig
index fba90a00b..aa258bb5f 100644
--- a/arch/arm/configs/bcm2711_defconfig
+++ b/arch/arm/configs/bcm2711_defconfig
@@ -1077,6 +1077,7 @@ CONFIG_SND_SOC_ICS43432=m
 CONFIG_SND_SOC_MA120X0P=m
 CONFIG_SND_SOC_MAX98357A=m
 CONFIG_SND_SOC_SPDIF=m
+CONFIG_SND_SOC_TAS5825M=m
 CONFIG_SND_SOC_TLV320AIC23_I2C=m
 CONFIG_SND_SOC_WM8804_I2C=m
 CONFIG_SND_SOC_WM8960=m
diff --git a/arch/arm/configs/bcmrpi_defconfig b/arch/arm/configs/bcmrpi_defconfig
index 95abac6e1..6d3e90826 100644
--- a/arch/arm/configs/bcmrpi_defconfig
+++ b/arch/arm/configs/bcmrpi_defconfig
@@ -1051,6 +1051,7 @@ CONFIG_SND_SOC_ICS43432=m
 CONFIG_SND_SOC_MA120X0P=m
 CONFIG_SND_SOC_MAX98357A=m
 CONFIG_SND_SOC_SPDIF=m
+CONFIG_SND_SOC_TAS5825M=m
 CONFIG_SND_SOC_TLV320AIC23_I2C=m
 CONFIG_SND_SOC_WM8804_I2C=m
 CONFIG_SND_SOC_WM8960=m
diff --git a/arch/arm64/configs/bcm2711_defconfig b/arch/arm64/configs/bcm2711_defconfig
index 99313f8c9..25b12f0e8 100644
--- a/arch/arm64/configs/bcm2711_defconfig
+++ b/arch/arm64/configs/bcm2711_defconfig
@@ -1116,6 +1116,7 @@ CONFIG_SND_SOC_ICS43432=m
 CONFIG_SND_SOC_MA120X0P=m
 CONFIG_SND_SOC_MAX98357A=m
 CONFIG_SND_SOC_SPDIF=m
+CONFIG_SND_SOC_TAS5825M=m
 CONFIG_SND_SOC_TLV320AIC23_I2C=m
 CONFIG_SND_SOC_WM8804_I2C=m
 CONFIG_SND_SOC_WM8960=m
diff --git a/arch/arm64/configs/bcm2712_defconfig b/arch/arm64/configs/bcm2712_defconfig
index 8ad2775f5..e1d6d4cd1 100644
--- a/arch/arm64/configs/bcm2712_defconfig
+++ b/arch/arm64/configs/bcm2712_defconfig
@@ -1119,6 +1119,7 @@ CONFIG_SND_SOC_ICS43432=m
 CONFIG_SND_SOC_MA120X0P=m
 CONFIG_SND_SOC_MAX98357A=m
 CONFIG_SND_SOC_SPDIF=m
+CONFIG_SND_SOC_TAS5825M=m
 CONFIG_SND_SOC_TLV320AIC23_I2C=m
 CONFIG_SND_SOC_WM8804_I2C=m
 CONFIG_SND_SOC_WM8960=m
diff --git a/sound/soc/codecs/Kconfig b/sound/soc/codecs/Kconfig
index 800ba3c06..3da3155ab 100644
--- a/sound/soc/codecs/Kconfig
+++ b/sound/soc/codecs/Kconfig
@@ -229,6 +229,7 @@ config SND_SOC_ALL_CODECS
 	imply SND_SOC_TAS5086
 	imply SND_SOC_TAS571X
 	imply SND_SOC_TAS5720
+	imply SND_SOC_TAS5825M
 	imply SND_SOC_TAS6424
 	imply SND_SOC_TDA7419
 	imply SND_SOC_TFA9879
@@ -1622,6 +1623,13 @@ config SND_SOC_TAS5805M
 	  DSP. DSP configuration for each instance needs to be supplied
 	  via a device-tree attribute.
 
+config SND_SOC_TAS5825M
+	tristate "Texas Instruments TAS5825M Stereo Audio amplifier"
+	depends on I2C
+	help
+	  Enable support for Texas Instruments TAS5825M high-efficiency stereo
+	  Class-D audio power amplifier with digital input.
+
 config SND_SOC_TAS6424
 	tristate "Texas Instruments TAS6424 Quad-Channel Audio amplifier"
 	depends on I2C
diff --git a/sound/soc/codecs/Makefile b/sound/soc/codecs/Makefile
index 6e1e71dc6..77d81aee4 100644
--- a/sound/soc/codecs/Makefile
+++ b/sound/soc/codecs/Makefile
@@ -260,6 +260,7 @@ snd-soc-tda7419-objs := tda7419.o
 snd-soc-tas2770-objs := tas2770.o
 snd-soc-tfa9879-objs := tfa9879.o
 snd-soc-tas5713-objs := tas5713.o
+snd-soc-tas5825m-objs := tas5825m.o
 snd-soc-tfa989x-objs := tfa989x.o
 snd-soc-tlv320adc3xxx-objs := tlv320adc3xxx.o
 snd-soc-tlv320aic23-objs := tlv320aic23.o
@@ -621,6 +622,7 @@ obj-$(CONFIG_SND_SOC_TAS6424)	+= snd-soc-tas6424.o
 obj-$(CONFIG_SND_SOC_TDA7419)	+= snd-soc-tda7419.o
 obj-$(CONFIG_SND_SOC_TAS2770) += snd-soc-tas2770.o
 obj-$(CONFIG_SND_SOC_TAS5713)	+= snd-soc-tas5713.o
+obj-$(CONFIG_SND_SOC_TAS5825M)	+= snd-soc-tas5825m.o
 obj-$(CONFIG_SND_SOC_TFA9879)	+= snd-soc-tfa9879.o
 obj-$(CONFIG_SND_SOC_TFA989X)	+= snd-soc-tfa989x.o
 obj-$(CONFIG_SND_SOC_TLV320ADC3XXX)	+= snd-soc-tlv320adc3xxx.o
diff --git a/sound/soc/codecs/tas5825m.c b/sound/soc/codecs/tas5825m.c
new file mode 100755
index 000000000..09d38921c
--- /dev/null
+++ b/sound/soc/codecs/tas5825m.c
@@ -0,0 +1,472 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ * Driver for the TAS5825M Audio Amplifier
+ *
+ * Author: Andy Liu <andy-liu@ti.com>
+ * Author: Dario Murgia <dario.murgia@alumni.uniroma2.eu>
+ *
+ */
+
+#include <linux/module.h>
+#include <linux/moduleparam.h>
+#include <linux/slab.h>
+#include <linux/of.h>
+#include <linux/init.h>
+#include <linux/i2c.h>
+#include <linux/regmap.h>
+
+#include <sound/soc.h>
+#include <sound/pcm.h>
+#include <sound/initval.h>
+
+#include "tas5825m.h"
+
+#define TAS5825M_DRV_NAME    "tas5825m"
+
+#define TAS5825M_RATES       (SNDRV_PCM_RATE_8000_192000)
+#define TAS5825M_FORMATS     (SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S20_3LE |\
+			                  SNDRV_PCM_FMTBIT_S24_LE | SNDRV_PCM_FMTBIT_S32_LE)
+
+#define TAS5825M_REG_00      (0x00)
+#define TAS5825M_REG_03      (0x03)
+#define TAS5825M_REG_0C      (0x0c)
+#define TAS5825M_REG_0D      (0x0d)
+#define TAS5825M_REG_0E      (0x0e)
+#define TAS5825M_REG_0F      (0x0f)
+#define TAS5825M_REG_10      (0x10)
+#define TAS5825M_REG_11      (0x11)
+#define TAS5825M_REG_12      (0x12)
+#define TAS5825M_REG_13      (0x13)
+#define TAS5825M_REG_35      (0x35)
+#define TAS5825M_REG_7F      (0x7f)
+
+#define TAS5825M_PAGE_00     (0x00)
+#define TAS5825M_PAGE_0B     (0x0b)
+
+#define TAS5825M_BOOK_00     (0x00)
+#define TAS5825M_BOOK_8C     (0x8c)
+
+#define TAS5825M_VOLUME_MAX  (110)
+#define TAS5825M_VOLUME_MIN  (30)
+
+const uint32_t tas5825m_volume[] = {
+	0x0000001B,    //0, -110dB
+	0x0000001E,    //1, -109dB
+	0x00000021,    //2, -108dB
+	0x00000025,    //3, -107dB
+	0x0000002A,    //4, -106dB
+	0x0000002F,    //5, -105dB
+	0x00000035,    //6, -104dB
+	0x0000003B,    //7, -103dB
+	0x00000043,    //8, -102dB
+	0x0000004B,    //9, -101dB
+	0x00000054,    //10, -100dB
+	0x0000005E,    //11, -99dB
+	0x0000006A,    //12, -98dB
+	0x00000076,    //13, -97dB
+	0x00000085,    //14, -96dB
+	0x00000095,    //15, -95dB
+	0x000000A7,    //16, -94dB
+	0x000000BC,    //17, -93dB
+	0x000000D3,    //18, -92dB
+	0x000000EC,    //19, -91dB
+	0x00000109,    //20, -90dB
+	0x0000012A,    //21, -89dB
+	0x0000014E,    //22, -88dB
+	0x00000177,    //23, -87dB
+	0x000001A4,    //24, -86dB
+	0x000001D8,    //25, -85dB
+	0x00000211,    //26, -84dB
+	0x00000252,    //27, -83dB
+	0x0000029A,    //28, -82dB
+	0x000002EC,    //29, -81dB
+	0x00000347,    //30, -80dB
+	0x000003AD,    //31, -79dB
+	0x00000420,    //32, -78dB
+	0x000004A1,    //33, -77dB
+	0x00000532,    //34, -76dB
+	0x000005D4,    //35, -75dB
+	0x0000068A,    //36, -74dB
+	0x00000756,    //37, -73dB
+	0x0000083B,    //38, -72dB
+	0x0000093C,    //39, -71dB
+	0x00000A5D,    //40, -70dB
+	0x00000BA0,    //41, -69dB
+	0x00000D0C,    //42, -68dB
+	0x00000EA3,    //43, -67dB
+	0x0000106C,    //44, -66dB
+	0x0000126D,    //45, -65dB
+	0x000014AD,    //46, -64dB
+	0x00001733,    //47, -63dB
+	0x00001A07,    //48, -62dB
+	0x00001D34,    //49, -61dB
+	0x000020C5,    //50, -60dB
+	0x000024C4,    //51, -59dB
+	0x00002941,    //52, -58dB
+	0x00002E49,    //53, -57dB
+	0x000033EF,    //54, -56dB
+	0x00003A45,    //55, -55dB
+	0x00004161,    //56, -54dB
+	0x0000495C,    //57, -53dB
+	0x0000524F,    //58, -52dB
+	0x00005C5A,    //59, -51dB
+	0x0000679F,    //60, -50dB
+	0x00007444,    //61, -49dB
+	0x00008274,    //62, -48dB
+	0x0000925F,    //63, -47dB
+	0x0000A43B,    //64, -46dB
+	0x0000B845,    //65, -45dB
+	0x0000CEC1,    //66, -44dB
+	0x0000E7FB,    //67, -43dB
+	0x00010449,    //68, -42dB
+	0x0001240C,    //69, -41dB
+	0x000147AE,    //70, -40dB
+	0x00016FAA,    //71, -39dB
+	0x00019C86,    //72, -38dB
+	0x0001CEDC,    //73, -37dB
+	0x00020756,    //74, -36dB
+	0x000246B5,    //75, -35dB
+	0x00028DCF,    //76, -34dB
+	0x0002DD96,    //77, -33dB
+	0x00033718,    //78, -32dB
+	0x00039B87,    //79, -31dB
+	0x00040C37,    //80, -30dB
+	0x00048AA7,    //81, -29dB
+	0x00051884,    //82, -28dB
+	0x0005B7B1,    //83, -27dB
+	0x00066A4A,    //84, -26dB
+	0x000732AE,    //85, -25dB
+	0x00081385,    //86, -24dB
+	0x00090FCC,    //87, -23dB
+	0x000A2ADB,    //88, -22dB
+	0x000B6873,    //89, -21dB
+	0x000CCCCD,    //90, -20dB
+	0x000E5CA1,    //91, -19dB
+	0x00101D3F,    //92, -18dB
+	0x0012149A,    //93, -17dB
+	0x00144961,    //94, -16dB
+	0x0016C311,    //95, -15dB
+	0x00198A13,    //96, -14dB
+	0x001CA7D7,    //97, -13dB
+	0x002026F3,    //98, -12dB
+	0x00241347,    //99, -11dB
+	0x00287A27,    //100, -10dB
+	0x002D6A86,    //101, -9dB
+	0x0032F52D,    //102, -8dB
+	0x00392CEE,    //103, -7dB
+	0x004026E7,    //104, -6dB
+	0x0047FACD,    //105, -5dB
+	0x0050C336,    //106, -4dB
+	0x005A9DF8,    //107, -3dB
+	0x0065AC8C,    //108, -2dB
+	0x00721483,    //109, -1dB
+	0x00800000,    //110, 0dB
+	0x008F9E4D,    //111, 1dB
+	0x00A12478,    //112, 2dB
+	0x00B4CE08,    //113, 3dB
+	0x00CADDC8,    //114, 4dB
+	0x00E39EA9,    //115, 5dB
+	0x00FF64C1,    //116, 6dB
+	0x011E8E6A,    //117, 7dB
+	0x0141857F,    //118, 8dB
+	0x0168C0C6,    //119, 9dB
+	0x0194C584,    //120, 10dB
+	0x01C62940,    //121, 11dB
+	0x01FD93C2,    //122, 12dB
+	0x023BC148,    //123, 13dB
+	0x02818508,    //124, 14dB
+	0x02CFCC01,    //125, 15dB
+	0x0327A01A,    //126, 16dB
+	0x038A2BAD,    //127, 17dB
+	0x03F8BD7A,    //128, 18dB
+	0x0474CD1B,    //129, 19dB
+	0x05000000,    //130, 20dB
+	0x059C2F02,    //131, 21dB
+	0x064B6CAE,    //132, 22dB
+	0x07100C4D,    //133, 23dB
+	0x07ECA9CD,    //134, 24dB
+	0x08E43299,    //135, 25dB
+	0x09F9EF8E,    //136, 26dB
+	0x0B319025,    //137, 27dB
+	0x0C8F36F2,    //138, 28dB
+	0x0E1787B8,    //139, 29dB
+	0x0FCFB725,    //140, 30dB
+	0x11BD9C84,    //141, 31dB
+	0x13E7C594,    //142, 32dB
+	0x16558CCB,    //143, 33dB
+	0x190F3254,    //144, 34dB
+	0x1C1DF80E,    //145, 35dB
+	0x1F8C4107,    //146, 36dB
+	0x2365B4BF,    //147, 37dB
+	0x27B766C2,    //148, 38dB
+	0x2C900313,    //149, 39dB
+	0x32000000,    //150, 40dB
+	0x3819D612,    //151, 41dB
+	0x3EF23ECA,    //152, 42dB
+	0x46A07B07,    //153, 43dB
+	0x4F3EA203,    //154, 44dB
+	0x58E9F9F9,    //155, 45dB
+	0x63C35B8E,    //156, 46dB
+	0x6FEFA16D,    //157, 47dB
+	0x7D982575,    //158, 48dB
+};
+
+struct tas5825m_priv {
+	struct regmap *regmap;
+
+	struct mutex lock;
+
+	int vol;
+};
+
+const struct regmap_config tas5825m_regmap = {
+	.reg_bits = 8,
+	.val_bits = 8,
+	.cache_type = REGCACHE_RBTREE,
+};
+
+static int tas5825m_vol_info(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_info *uinfo)
+{
+	uinfo->type   = SNDRV_CTL_ELEM_TYPE_INTEGER;
+	uinfo->access = (SNDRV_CTL_ELEM_ACCESS_TLV_READ | SNDRV_CTL_ELEM_ACCESS_READWRITE);
+	uinfo->count  = 1;
+
+	uinfo->value.integer.min  = TAS5825M_VOLUME_MIN;
+	uinfo->value.integer.max  = TAS5825M_VOLUME_MAX;
+	uinfo->value.integer.step = 1;
+
+	return 0;
+}
+
+static int tas5825m_vol_locked_get(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_component *component = snd_soc_kcontrol_component(kcontrol);
+	struct tas5825m_priv *tas5825m = snd_soc_component_get_drvdata(component);
+
+	mutex_lock(&tas5825m->lock);
+	ucontrol->value.integer.value[0] = tas5825m->vol;
+	mutex_unlock(&tas5825m->lock);
+
+	return 0;
+}
+
+static inline int get_volume_index(int vol)
+{
+	int index;
+	index = vol;
+
+	if (index < TAS5825M_VOLUME_MIN)
+		index = TAS5825M_VOLUME_MIN;
+
+	if (index > TAS5825M_VOLUME_MAX)
+		index = TAS5825M_VOLUME_MAX;
+
+	return index;
+}
+
+static void tas5825m_set_volume(struct snd_soc_component *component, int vol)
+{
+	unsigned int index;
+	uint32_t volume_hex;
+	uint8_t byte4;
+	uint8_t byte3;
+	uint8_t byte2;
+	uint8_t byte1;
+
+	index = get_volume_index(vol);
+	volume_hex = tas5825m_volume[index];
+
+	byte4 = ((volume_hex >> 24) & 0xFF);
+	byte3 = ((volume_hex >> 16) & 0xFF);
+	byte2 = ((volume_hex >> 8)  & 0xFF);
+	byte1 = ((volume_hex >> 0)  & 0xFF);
+
+	snd_soc_component_write(component, TAS5825M_REG_00, TAS5825M_PAGE_00);
+	snd_soc_component_write(component, TAS5825M_REG_7F, TAS5825M_BOOK_8C);
+	snd_soc_component_write(component, TAS5825M_REG_00, TAS5825M_PAGE_0B);
+	snd_soc_component_write(component, TAS5825M_REG_0C, byte4);
+	snd_soc_component_write(component, TAS5825M_REG_0D, byte3);
+	snd_soc_component_write(component, TAS5825M_REG_0E, byte2);
+	snd_soc_component_write(component, TAS5825M_REG_0F, byte1);
+	snd_soc_component_write(component, TAS5825M_REG_10, byte4);
+	snd_soc_component_write(component, TAS5825M_REG_11, byte3);
+	snd_soc_component_write(component, TAS5825M_REG_12, byte2);
+	snd_soc_component_write(component, TAS5825M_REG_13, byte1);
+}
+
+static int tas5825m_vol_locked_put(struct snd_kcontrol *kcontrol, struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_component *component = snd_soc_kcontrol_component(kcontrol);
+	struct tas5825m_priv *tas5825m = snd_soc_component_get_drvdata(component);
+
+	mutex_lock(&tas5825m->lock);
+
+	tas5825m->vol = ucontrol->value.integer.value[0];
+	tas5825m_set_volume(component, tas5825m->vol);
+
+	mutex_unlock(&tas5825m->lock);
+
+	return 0;
+}
+
+static const struct snd_kcontrol_new tas5825m_vol_control =
+{
+	.iface = SNDRV_CTL_ELEM_IFACE_MIXER,
+	.name  = "Master Playback Volume",
+	.info  = tas5825m_vol_info,
+	.get   = tas5825m_vol_locked_get,
+	.put   = tas5825m_vol_locked_put,
+};
+
+static int tas5825m_snd_probe(struct snd_soc_component *component)
+{
+	int ret;
+	ret = snd_soc_add_component_controls(component, &tas5825m_vol_control, 1);
+
+	return ret;
+}
+
+static struct snd_soc_component_driver soc_component_tas5825m = {
+	.probe = tas5825m_snd_probe,
+	.idle_bias_on = 1,
+	.use_pmdown_time = 1,
+	.endianness = 1,
+};
+
+static int tas5825m_mute_stream(struct snd_soc_dai *dai, int mute, int direction)
+{
+	u8 reg03_value = 0;
+	u8 reg35_value = 0;
+	struct snd_soc_component *component = dai->component;
+
+	if (mute)
+	{
+		reg03_value = 0x0b;
+		reg35_value = 0x00;
+	}
+	else
+	{
+		reg03_value = 0x03;
+		reg35_value = 0x11;
+	}
+
+	snd_soc_component_write(component, TAS5825M_REG_00, TAS5825M_PAGE_00);
+	snd_soc_component_write(component, TAS5825M_REG_7F, TAS5825M_BOOK_00);
+	snd_soc_component_write(component, TAS5825M_REG_00, TAS5825M_PAGE_00);
+	snd_soc_component_write(component, TAS5825M_REG_03, reg03_value);
+	snd_soc_component_write(component, TAS5825M_REG_35, reg35_value);
+
+	return 0;
+}
+
+static const struct snd_soc_dai_ops tas5825m_dai_ops = {
+	.mute_stream = tas5825m_mute_stream,
+	.no_capture_mute = 1,
+};
+
+static struct snd_soc_dai_driver tas5825m_dai = {
+	.name       = "tas5825m-amp",
+	.playback   = {
+		.stream_name    = "Playback",
+		.channels_min   = 2,
+		.channels_max   = 2,
+		.rates      = TAS5825M_RATES,
+		.formats    = TAS5825M_FORMATS,
+	},
+	.ops = &tas5825m_dai_ops,
+};
+
+static int tas5825m_probe(struct device *dev, struct regmap *regmap)
+{
+	struct tas5825m_priv *tas5825m;
+	int ret;
+
+	tas5825m = devm_kzalloc(dev, sizeof(struct tas5825m_priv), GFP_KERNEL);
+	if (!tas5825m)
+		return -ENOMEM;
+
+	dev_set_drvdata(dev, tas5825m);
+	tas5825m->regmap = regmap;
+	tas5825m->vol    = 85;         // -25dB
+
+	mutex_init(&tas5825m->lock);
+
+	ret = regmap_register_patch(regmap, tas5825m_init_sequence, ARRAY_SIZE(tas5825m_init_sequence));
+	if (ret != 0)
+	{
+		dev_err(dev, "Failed to initialize TAS5825M: %d\n",ret);
+		goto err;
+
+	}
+
+	ret = devm_snd_soc_register_component(dev,
+								 &soc_component_tas5825m,
+								 &tas5825m_dai,
+								 1);
+	if (ret != 0)
+	{
+		dev_err(dev, "Failed to register component: %d\n", ret);
+		goto err;
+	}
+
+	return 0;
+
+err:
+	return ret;
+
+}
+
+static int tas5825m_i2c_probe(struct i2c_client *i2c)
+{
+	struct regmap *regmap;
+	struct regmap_config config = tas5825m_regmap;
+
+	regmap = devm_regmap_init_i2c(i2c, &config);
+	if (IS_ERR(regmap))
+		return PTR_ERR(regmap);
+
+	return tas5825m_probe(&i2c->dev, regmap);
+}
+
+static int tas5825m_remove(struct device *dev)
+{
+	snd_soc_unregister_component(dev);
+
+	return 0;
+}
+
+static void tas5825m_i2c_remove(struct i2c_client *i2c)
+{
+	tas5825m_remove(&i2c->dev);
+}
+
+static const struct i2c_device_id tas5825m_i2c_id[] = {
+	{ "tas5825m", },
+	{ }
+};
+MODULE_DEVICE_TABLE(i2c, tas5825m_i2c_id);
+
+#ifdef CONFIG_OF
+static const struct of_device_id tas5825m_of_match[] = {
+	{ .compatible = "ti,tas5825m", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, tas5825m_of_match);
+#endif
+
+static struct i2c_driver tas5825m_i2c_driver = {
+	.probe_new  = tas5825m_i2c_probe,
+	.remove     = tas5825m_i2c_remove,
+	.id_table   = tas5825m_i2c_id,
+	.driver     = {
+		.name   = TAS5825M_DRV_NAME,
+		.of_match_table = tas5825m_of_match,
+	},
+};
+
+module_i2c_driver(tas5825m_i2c_driver);
+
+MODULE_AUTHOR("Andy Liu <andy-liu@ti.com>");
+MODULE_AUTHOR("Dario Murgia <dario.murgia@alumni.uniroma2.eu>");
+MODULE_DESCRIPTION("TAS5825M Audio Amplifier Driver");
+MODULE_LICENSE("GPL v2");
diff --git a/sound/soc/codecs/tas5825m.h b/sound/soc/codecs/tas5825m.h
new file mode 100755
index 000000000..6c4540e99
--- /dev/null
+++ b/sound/soc/codecs/tas5825m.h
@@ -0,0 +1,1720 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ * Driver for the TAS5825M Audio Amplifier
+ *
+ * Author: Andy Liu <andy-liu@ti.com>
+ * Author: Dario Murgia <dario.murgia@alumni.uniroma2.eu>
+ *
+ */
+
+#include <linux/regmap.h>
+
+static const struct reg_sequence tas5825m_init_sequence[] =
+{
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x03, 0x02 },
+	{ 0x01, 0x11 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+
+	{ 0x7f, 0x00 },
+	{ 0x7d, 0x11 },
+	{ 0x7e, 0xff },
+	{ 0x00, 0x01 },
+	{ 0x51, 0x05 },
+	{ 0x00, 0x02 },
+	{ 0x1d, 0x00 },
+	{ 0x19, 0x80 },
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x46, 0x11 },
+	{ 0x00, 0x00 },
+	{ 0x02, 0x00 },
+	{ 0x53, 0x01 },
+//	{ 0x54, 0x04 }, // Analog gain -2.0dB (23.43 Vpeak)
+//	{ 0x54, 0x05 }, // Analog gain -2.5dB (22.12 Vpeak)
+//	{ 0x54, 0x06 }, // Analog gain -3.0dB (20.89 Vpeak)
+//	{ 0x54, 0x07 }, // Analog gain -3.5dB (19.73 Vpeak)
+	{ 0x54, 0x08 }, // Analog gain -4.0dB (18.61 Vpeak)
+//	{ 0x54, 0x09 }, // Analog gain -4.5dB (17.57 Vpeak)
+//	{ 0x54, 0x0a }, // Analog gain -5.0dB (16.59 Vpeak)
+//	{ 0x54, 0x0b }, // Analog gain -5.5dB (15.66 Vpeak)
+//	{ 0x54, 0x0c }, // Analog gain -6.0dB (14.79 Vpeak)
+//	{ 0x54, 0x0d }, // Analog gain -6.5dB (13.96 Vpeak)
+//	{ 0x54, 0x0e }, // Analog gain -7.0dB (13.18 Vpeak)
+//	{ 0x54, 0x0f }, // Analog gain -7.5dB (12.44 Vpeak)
+//	{ 0x54, 0x10 }, // Analog gain -8.0dB (11.74 Vpeak)
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x03, 0x02 },
+
+// Tuning coeffs
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x8c },
+	{ 0x00, 0x0b },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x01 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x20 },
+	{ 0x52, 0xc4 },
+	{ 0x53, 0x9c },
+	{ 0x5c, 0x7f },
+	{ 0x5d, 0xff },
+	{ 0x5e, 0xff },
+	{ 0x5f, 0xff },
+	{ 0x00, 0x00 },
+	{ 0x7f, 0xaa },
+	{ 0x00, 0x12 },
+	{ 0x08, 0x07 },
+	{ 0x09, 0xff },
+	{ 0x0a, 0xff },
+	{ 0x0b, 0xf0 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x07 },
+	{ 0x1d, 0xff },
+	{ 0x1e, 0xff },
+	{ 0x1f, 0xf0 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x07 },
+	{ 0x31, 0xff },
+	{ 0x32, 0xff },
+	{ 0x33, 0xf0 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x07 },
+	{ 0x45, 0xff },
+	{ 0x46, 0xff },
+	{ 0x47, 0xf0 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x07 },
+	{ 0x59, 0xff },
+	{ 0x5a, 0xff },
+	{ 0x5b, 0xf0 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x07 },
+	{ 0x6d, 0xff },
+	{ 0x6e, 0xff },
+	{ 0x6f, 0xf0 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x00, 0x13 },
+	{ 0x08, 0x07 },
+	{ 0x09, 0xff },
+	{ 0x0a, 0xff },
+	{ 0x0b, 0xf0 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x07 },
+	{ 0x1d, 0xff },
+	{ 0x1e, 0xff },
+	{ 0x1f, 0xf0 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x07 },
+	{ 0x31, 0xff },
+	{ 0x32, 0xff },
+	{ 0x33, 0xf0 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x07 },
+	{ 0x45, 0xff },
+	{ 0x46, 0xff },
+	{ 0x47, 0xf0 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x07 },
+	{ 0x59, 0xff },
+	{ 0x5a, 0xff },
+	{ 0x5b, 0xf0 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x07 },
+	{ 0x6d, 0xff },
+	{ 0x6e, 0xff },
+	{ 0x6f, 0xf0 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x00, 0x14 },
+	{ 0x08, 0x07 },
+	{ 0x09, 0xff },
+	{ 0x0a, 0xff },
+	{ 0x0b, 0xf0 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x07 },
+	{ 0x1d, 0xff },
+	{ 0x1e, 0xff },
+	{ 0x1f, 0xf0 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x07 },
+	{ 0x31, 0xff },
+	{ 0x32, 0xff },
+	{ 0x33, 0xf0 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x07 },
+	{ 0x45, 0xff },
+	{ 0x46, 0xff },
+	{ 0x47, 0xf0 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x07 },
+	{ 0x59, 0xff },
+	{ 0x5a, 0xff },
+	{ 0x5b, 0xf0 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x07 },
+	{ 0x6d, 0xff },
+	{ 0x6e, 0xff },
+	{ 0x6f, 0xf0 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x00, 0x15 },
+	{ 0x08, 0x07 },
+	{ 0x09, 0xff },
+	{ 0x0a, 0xff },
+	{ 0x0b, 0xf0 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x07 },
+	{ 0x1d, 0xff },
+	{ 0x1e, 0xff },
+	{ 0x1f, 0xf0 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x07 },
+	{ 0x31, 0xff },
+	{ 0x32, 0xff },
+	{ 0x33, 0xf0 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x07 },
+	{ 0x45, 0xff },
+	{ 0x46, 0xff },
+	{ 0x47, 0xf0 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x07 },
+	{ 0x59, 0xff },
+	{ 0x5a, 0xff },
+	{ 0x5b, 0xf0 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x07 },
+	{ 0x6d, 0xff },
+	{ 0x6e, 0xff },
+	{ 0x6f, 0xf0 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+	{ 0x00, 0x16 },
+	{ 0x08, 0x07 },
+	{ 0x09, 0xff },
+	{ 0x0a, 0xff },
+	{ 0x0b, 0xf0 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x07 },
+	{ 0x1d, 0xff },
+	{ 0x1e, 0xff },
+	{ 0x1f, 0xf0 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x07 },
+	{ 0x31, 0xff },
+	{ 0x32, 0xff },
+	{ 0x33, 0xf0 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x07 },
+	{ 0x45, 0xff },
+	{ 0x46, 0xff },
+	{ 0x47, 0xf0 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x07 },
+	{ 0x59, 0xff },
+	{ 0x5a, 0xff },
+	{ 0x5b, 0xf0 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x07 },
+	{ 0x6d, 0xff },
+	{ 0x6e, 0xff },
+	{ 0x6f, 0xf0 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+// Book 0x8c
+	{ 0x00, 0x00 },
+	{ 0x7f, 0x8c },
+
+	{ 0x00, 0x01 },
+	{ 0x28, 0x40 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x71 },
+	{ 0x2e, 0x94 },
+	{ 0x2f, 0x9a },
+
+	{ 0x00, 0x09 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x03 },
+	{ 0x2a, 0x69 },
+	{ 0x2b, 0xc5 },
+	{ 0x2c, 0x1c },
+	{ 0x2d, 0x1b },
+	{ 0x2e, 0xf0 },
+	{ 0x2f, 0x41 },
+	{ 0x30, 0x04 },
+	{ 0x31, 0x0c },
+	{ 0x32, 0x37 },
+	{ 0x33, 0x14 },
+
+	{ 0x00, 0x0a },
+	{ 0x34, 0x08 },
+	{ 0x35, 0x13 },
+	{ 0x36, 0x85 },
+	{ 0x37, 0x62 },
+
+	{ 0x64, 0x00 },
+	{ 0x65, 0x80 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x80 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x80 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+	{ 0x00, 0x0b },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x80 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x80 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x80 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x80 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x00 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x80 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x01 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x01 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x57 },
+	{ 0x33, 0x62 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+
+	{ 0x48, 0x02 },
+	{ 0x49, 0x66 },
+	{ 0x4a, 0xc4 },
+	{ 0x4b, 0x1b },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x89 },
+	{ 0x4e, 0x37 },
+	{ 0x4f, 0x4c },
+
+	{ 0x54, 0x7d },
+	{ 0x55, 0x99 },
+	{ 0x56, 0x3b },
+	{ 0x57, 0xe5 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x57 },
+	{ 0x5b, 0x62 },
+
+	{ 0x00, 0x06 },
+	{ 0x58, 0x00 },
+	{ 0x59, 0x80 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+
+	{ 0x60, 0xff },
+	{ 0x61, 0x80 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x0d },
+	{ 0x66, 0xa6 },
+	{ 0x67, 0x86 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x0d },
+	{ 0x6a, 0xa6 },
+	{ 0x6b, 0x86 },
+	{ 0x6c, 0x00 },
+	{ 0x6d, 0x06 },
+	{ 0x6e, 0xd3 },
+	{ 0x6f, 0x72 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0xff },
+	{ 0x79, 0x81 },
+	{ 0x7a, 0x47 },
+	{ 0x7b, 0xae },
+	{ 0x7c, 0xf9 },
+	{ 0x7d, 0x06 },
+	{ 0x7e, 0x21 },
+	{ 0x7f, 0xa9 },
+
+	{ 0x00, 0x07 },
+	{ 0x08, 0xfe },
+	{ 0x09, 0x01 },
+	{ 0x0a, 0xc0 },
+	{ 0x0b, 0x79 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+
+	{ 0x3c, 0x01 },
+	{ 0x3d, 0x53 },
+	{ 0x3e, 0x8f },
+	{ 0x3f, 0xcc },
+	{ 0x40, 0x01 },
+	{ 0x41, 0x53 },
+	{ 0x42, 0x8f },
+	{ 0x43, 0xcc },
+	{ 0x44, 0x00 },
+	{ 0x45, 0x22 },
+	{ 0x46, 0x1d },
+	{ 0x47, 0x95 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0xff },
+	{ 0x51, 0x81 },
+	{ 0x52, 0x47 },
+	{ 0x53, 0xae },
+	{ 0x54, 0xf9 },
+	{ 0x55, 0x06 },
+	{ 0x56, 0x21 },
+	{ 0x57, 0xa9 },
+	{ 0x58, 0xfe },
+	{ 0x59, 0x01 },
+	{ 0x5a, 0xc0 },
+	{ 0x5b, 0x79 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x80 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+
+	{ 0x6c, 0x40 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x40 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+
+// Book 0xaa
+	{ 0x00, 0x00 },
+	{ 0x7f, 0xaa },
+
+	{ 0x00, 0x01 },
+	{ 0x30, 0x08 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x08 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x08 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x08 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+	{ 0x00, 0x02 },
+	{ 0x08, 0x08 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x08 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x08 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x08 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x08 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x08 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+	{ 0x00, 0x03 },
+	{ 0x08, 0x08 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x08 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x08 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x08 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x08 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x08 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+	{ 0x00, 0x04 },
+	{ 0x08, 0x08 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x08 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x08 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x08 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x08 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x08 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+	{ 0x00, 0x05 },
+	{ 0x08, 0x08 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x08 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x08 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+	{ 0x34, 0x00 },
+	{ 0x35, 0x00 },
+	{ 0x36, 0x00 },
+	{ 0x37, 0x00 },
+	{ 0x38, 0x00 },
+	{ 0x39, 0x00 },
+	{ 0x3a, 0x00 },
+	{ 0x3b, 0x00 },
+	{ 0x3c, 0x00 },
+	{ 0x3d, 0x00 },
+	{ 0x3e, 0x00 },
+	{ 0x3f, 0x00 },
+	{ 0x40, 0x00 },
+	{ 0x41, 0x00 },
+	{ 0x42, 0x00 },
+	{ 0x43, 0x00 },
+	{ 0x44, 0x08 },
+	{ 0x45, 0x00 },
+	{ 0x46, 0x00 },
+	{ 0x47, 0x00 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x00 },
+	{ 0x4b, 0x00 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x00 },
+	{ 0x4f, 0x00 },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x00 },
+	{ 0x53, 0x00 },
+	{ 0x54, 0x00 },
+	{ 0x55, 0x00 },
+	{ 0x56, 0x00 },
+	{ 0x57, 0x00 },
+	{ 0x58, 0x08 },
+	{ 0x59, 0x00 },
+	{ 0x5a, 0x00 },
+	{ 0x5b, 0x00 },
+	{ 0x5c, 0x00 },
+	{ 0x5d, 0x00 },
+	{ 0x5e, 0x00 },
+	{ 0x5f, 0x00 },
+	{ 0x60, 0x00 },
+	{ 0x61, 0x00 },
+	{ 0x62, 0x00 },
+	{ 0x63, 0x00 },
+	{ 0x64, 0x00 },
+	{ 0x65, 0x00 },
+	{ 0x66, 0x00 },
+	{ 0x67, 0x00 },
+	{ 0x68, 0x00 },
+	{ 0x69, 0x00 },
+	{ 0x6a, 0x00 },
+	{ 0x6b, 0x00 },
+	{ 0x6c, 0x08 },
+	{ 0x6d, 0x00 },
+	{ 0x6e, 0x00 },
+	{ 0x6f, 0x00 },
+	{ 0x70, 0x00 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+	{ 0x00, 0x06 },
+	{ 0x08, 0x08 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x00 },
+	{ 0x0d, 0x00 },
+	{ 0x0e, 0x00 },
+	{ 0x0f, 0x00 },
+	{ 0x10, 0x00 },
+	{ 0x11, 0x00 },
+	{ 0x12, 0x00 },
+	{ 0x13, 0x00 },
+	{ 0x14, 0x00 },
+	{ 0x15, 0x00 },
+	{ 0x16, 0x00 },
+	{ 0x17, 0x00 },
+	{ 0x18, 0x00 },
+	{ 0x19, 0x00 },
+	{ 0x1a, 0x00 },
+	{ 0x1b, 0x00 },
+	{ 0x1c, 0x08 },
+	{ 0x1d, 0x00 },
+	{ 0x1e, 0x00 },
+	{ 0x1f, 0x00 },
+	{ 0x20, 0x00 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+
+	{ 0x00, 0x09 },
+	{ 0x34, 0x07 },
+	{ 0x35, 0xf9 },
+	{ 0x36, 0x50 },
+	{ 0x37, 0x79 },
+	{ 0x38, 0xf0 },
+	{ 0x39, 0x0d },
+	{ 0x3a, 0x5f },
+	{ 0x3b, 0x0f },
+	{ 0x3c, 0x07 },
+	{ 0x3d, 0xf9 },
+	{ 0x3e, 0x50 },
+	{ 0x3f, 0x79 },
+	{ 0x40, 0x0f },
+	{ 0x41, 0xf2 },
+	{ 0x42, 0x9e },
+	{ 0x43, 0x25 },
+	{ 0x44, 0xf8 },
+	{ 0x45, 0x0d },
+	{ 0x46, 0x5c },
+	{ 0x47, 0x42 },
+	{ 0x48, 0x00 },
+	{ 0x49, 0x00 },
+	{ 0x4a, 0x22 },
+	{ 0x4b, 0x87 },
+	{ 0x4c, 0x00 },
+	{ 0x4d, 0x00 },
+	{ 0x4e, 0x45 },
+	{ 0x4f, 0x0d },
+	{ 0x50, 0x00 },
+	{ 0x51, 0x00 },
+	{ 0x52, 0x22 },
+	{ 0x53, 0x87 },
+	{ 0x54, 0x0f },
+	{ 0x55, 0xbd },
+	{ 0x56, 0x85 },
+	{ 0x57, 0x91 },
+	{ 0x58, 0xf8 },
+	{ 0x59, 0x41 },
+	{ 0x5a, 0xf0 },
+	{ 0x5b, 0x54 },
+	{ 0x5c, 0x08 },
+	{ 0x5d, 0x02 },
+	{ 0x5e, 0xbb },
+	{ 0x5f, 0x32 },
+	{ 0x60, 0xf0 },
+	{ 0x61, 0x2c },
+	{ 0x62, 0xcc },
+	{ 0x63, 0xfa },
+	{ 0x64, 0x07 },
+	{ 0x65, 0xd1 },
+	{ 0x66, 0x13 },
+	{ 0x67, 0x9e },
+	{ 0x68, 0x0f },
+	{ 0x69, 0xd3 },
+	{ 0x6a, 0x43 },
+	{ 0x6b, 0x0b },
+	{ 0x6c, 0xf8 },
+	{ 0x6d, 0x2c },
+	{ 0x6e, 0x41 },
+	{ 0x6f, 0x35 },
+	{ 0x70, 0x08 },
+	{ 0x71, 0x00 },
+	{ 0x72, 0x00 },
+	{ 0x73, 0x00 },
+	{ 0x74, 0x00 },
+	{ 0x75, 0x00 },
+	{ 0x76, 0x00 },
+	{ 0x77, 0x00 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x00 },
+	{ 0x7a, 0x00 },
+	{ 0x7b, 0x00 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x00 },
+	{ 0x7e, 0x00 },
+	{ 0x7f, 0x00 },
+
+	{ 0x00, 0x0a },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x00 },
+	{ 0x0a, 0x00 },
+	{ 0x0b, 0x00 },
+	{ 0x0c, 0x09 },
+	{ 0x0d, 0x57 },
+	{ 0x0e, 0x1f },
+	{ 0x0f, 0x21 },
+	{ 0x10, 0xf1 },
+	{ 0x11, 0x02 },
+	{ 0x12, 0xb2 },
+	{ 0x13, 0xb5 },
+	{ 0x14, 0x06 },
+	{ 0x15, 0x44 },
+	{ 0x16, 0x45 },
+	{ 0x17, 0x30 },
+	{ 0x18, 0x0c },
+	{ 0x19, 0x90 },
+	{ 0x1a, 0x26 },
+	{ 0x1b, 0x79 },
+	{ 0x1c, 0xfa },
+	{ 0x1d, 0xd1 },
+	{ 0x1e, 0xc2 },
+	{ 0x1f, 0x81 },
+	{ 0x20, 0x08 },
+	{ 0x21, 0x00 },
+	{ 0x22, 0x00 },
+	{ 0x23, 0x00 },
+	{ 0x24, 0x00 },
+	{ 0x25, 0x00 },
+	{ 0x26, 0x00 },
+	{ 0x27, 0x00 },
+	{ 0x28, 0x00 },
+	{ 0x29, 0x00 },
+	{ 0x2a, 0x00 },
+	{ 0x2b, 0x00 },
+	{ 0x2c, 0x00 },
+	{ 0x2d, 0x00 },
+	{ 0x2e, 0x00 },
+	{ 0x2f, 0x00 },
+	{ 0x30, 0x00 },
+	{ 0x31, 0x00 },
+	{ 0x32, 0x00 },
+	{ 0x33, 0x00 },
+
+	{ 0x00, 0x07 },
+	{ 0x78, 0x00 },
+	{ 0x79, 0x02 },
+	{ 0x7a, 0x0e },
+	{ 0x7b, 0xd1 },
+	{ 0x7c, 0x00 },
+	{ 0x7d, 0x04 },
+	{ 0x7e, 0x1d },
+	{ 0x7f, 0xa1 },
+
+	{ 0x00, 0x08 },
+	{ 0x08, 0x00 },
+	{ 0x09, 0x02 },
+	{ 0x0a, 0x0e },
+	{ 0x0b, 0xd1 },
+	{ 0x0c, 0x0e },
+	{ 0x0d, 0xfc },
+	{ 0x0e, 0x52 },
+	{ 0x0f, 0x99 },
+	{ 0x10, 0xf8 },
+	{ 0x11, 0xfb },
+	{ 0x12, 0x72 },
+	{ 0x13, 0x25 },
+
+	{ 0x28, 0x07 },
+	{ 0x29, 0x80 },
+	{ 0x2a, 0x38 },
+	{ 0x2b, 0x1d },
+	{ 0x2c, 0xf0 },
+	{ 0x2d, 0xff },
+	{ 0x2e, 0x8f },
+	{ 0x2f, 0xc6 },
+	{ 0x30, 0x07 },
+	{ 0x31, 0x80 },
+	{ 0x32, 0x38 },
+	{ 0x33, 0x1d },
+	{ 0x34, 0x0e },
+	{ 0x35, 0xfc },
+	{ 0x36, 0x52 },
+	{ 0x37, 0x99 },
+	{ 0x38, 0xf8 },
+	{ 0x39, 0xfb },
+	{ 0x3a, 0x72 },
+	{ 0x3b, 0x25 },
+
+// Register Tuning
+	{ 0x00, 0x00 }, // Page 0x00
+	{ 0x7f, 0x00 }, // Book 0x00
+	{ 0x30, 0x00 },
+	{ 0x60, 0x02 },
+	{ 0x62, 0x09 },
+	{ 0x4c, 0x6c }, // Digital volume -30dB
+//	{ 0x4c, 0x58 }, // Digital volume -20dB
+//	{ 0x4c, 0x44 }, // Digital volume -10dB
+//	{ 0x4c, 0x30 }, // Digital volume 0dB
+	{ 0x03, 0x03 },
+	{ 0x00, 0x00 }, // Page 0x00
+	{ 0x7f, 0x00 }, // Book 0x00
+	{ 0x78, 0x80 }, // Clear analog fault
+};
